#include "../HLSL/Random.hlsl"
#include "../HLSL/Mathx.hlsl"

uniform uint _ThreadCount;
uniform float _Radius;

RWStructuredBuffer<uint> gb_RandStates;
StructuredBuffer<float> gb_Height;
AppendStructuredBuffer<uint2> gb_WaterCoords;

#pragma kernel AddWater
[numthreads(64, 1, 1)]
void AddWater(uint DTid : SV_DispatchThreadID)
{
    if (DTid >= _ThreadCount) return;

    Random rand = Random::CreateFromState(gb_RandStates[DTid]);

    // use polar coordinates to generate random points in a circle
    // resultant distribution will have more points in the center
    // for a detailed explanation, refer here: https://www.youtube.com/watch?v=4y_nmpv-9lI
    float theta = rand.NextFloat(2.0f * PI);
    float radius = rand.NextFloat(_Radius);

    float2 coord = float2(radius * cos(theta), radius * sin(theta));
    gb_WaterCoords.Append(uint2(coord));
}
